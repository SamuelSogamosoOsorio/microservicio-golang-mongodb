name: CI/CD with MongoDB, Trivy, and Tests

on:
  push:
    branches:
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Run Unit Tests (with MongoDB)
        run: |
          go mod tidy
          go test -v ./...

  build-and-scan:
    needs: unit-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}


      - name: Build Docker image
        run: |
          docker build -t samuel05x/microservicio-user:latest \
                       -t ghcr.io/${{ github.repository_owner || toLower}}/microservicio-user:latest .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: samuel05x/microservicio-user:latest
          format: table
          exit-code: 1
          ignore-unfixed: true
          severity: CRITICAL,HIGH

      - name: Push Docker image to DockerHub and GHCR
        run: |
          docker push samuel05x/microservicio-user:latest
          docker push ghcr.io/${{ github.repository_owner || toLower }}/microservicio-user:latest


  integration-tests:
    needs: build-and-scan
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Pull Docker image
        run: docker pull samuel05x/microservicio-user:latest

      - name: Run container and test execution
        run: |
          docker run --rm --network host \
            -e MONGODB_URI=mongodb://localhost:27017 \
            -e MONGODB_NAME=usersdb_test \
            samuel05x/microservicio-user:latest &
          sleep 5  # espera que el servicio levante
      
          curl -f http://localhost:8080/users || exit 1  # o cualquier endpoint válido
      
          echo "✅ El contenedor respondió correctamente."


